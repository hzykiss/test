window.boot = function () {
    var settings = window._CCSettings;
    window._CCSettings = undefined;

    if ( !settings.debug ) {
        var uuids = settings.uuids;

        var rawAssets = settings.rawAssets;
        var assetTypes = settings.assetTypes;
        var realRawAssets = settings.rawAssets = {};
        for (var mount in rawAssets) {
            var entries = rawAssets[mount];
            var realEntries = realRawAssets[mount] = {};
            for (var id in entries) {
                var entry = entries[id];
                var type = entry[1];
                // retrieve minified raw asset
                if (typeof type === 'number') {
                    entry[1] = assetTypes[type];
                }
                // retrieve uuid
                realEntries[uuids[id] || id] = entry;
            }
        }

        var scenes = settings.scenes;
        for (var i = 0; i < scenes.length; ++i) {
            var scene = scenes[i];
            if (typeof scene.uuid === 'number') {
                scene.uuid = uuids[scene.uuid];
            }
        }

        var packedAssets = settings.packedAssets;
        for (var packId in packedAssets) {
            var packedIds = packedAssets[packId];
            for (var j = 0; j < packedIds.length; ++j) {
                if (typeof packedIds[j] === 'number') {
                    packedIds[j] = uuids[packedIds[j]];
                }
            }
        }

        var subpackages = settings.subpackages;
        for (var subId in subpackages) {
            var uuidArray = subpackages[subId].uuids;
            if (uuidArray) {
                for (var k = 0, l = uuidArray.length; k < l; k++) {
                    if (typeof uuidArray[k] === 'number') {
                        uuidArray[k] = uuids[uuidArray[k]];
                    }
                }
            }
        }
    }

    function setLoadingDisplay () {
        // Loading splash scene
        var splash = document.getElementById('splash');
        var progressBar = splash.querySelector('.progress-bar span');
        cc.loader.onProgress = function (completedCount, totalCount, item) {
            var percent = 100 * completedCount / totalCount;
            if (progressBar) {
                progressBar.style.width = percent.toFixed(2) + '%';
            }
        };
        splash.style.display = 'block';
        progressBar.style.width = '0%';

        cc.director.once(cc.Director.EVENT_AFTER_SCENE_LAUNCH, function () {
            splash.style.display = 'none';
        });
    }

    var onStart = function () {
        cc.loader.downloader._subpackages = settings.subpackages;

        cc.view.enableRetina(true);
        cc.view.resizeWithBrowserSize(true);

        if (cc.sys.isBrowser) {
            setLoadingDisplay();
        }

        if (cc.sys.isMobile) {
            if (settings.orientation === 'landscape') {
                cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);
            }
            else if (settings.orientation === 'portrait') {
                cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);
            }
            cc.view.enableAutoFullScreen([
                cc.sys.BROWSER_TYPE_BAIDU,
                cc.sys.BROWSER_TYPE_WECHAT,
                cc.sys.BROWSER_TYPE_MOBILE_QQ,
                cc.sys.BROWSER_TYPE_MIUI,
            ].indexOf(cc.sys.browserType) < 0);
        }

        // Limit downloading max concurrent task to 2,
        // more tasks simultaneously may cause performance draw back on some android system / browsers.
        // You can adjust the number based on your own test result, you have to set it before any loading process to take effect.
        if (cc.sys.isBrowser && cc.sys.os === cc.sys.OS_ANDROID) {
            cc.macro.DOWNLOAD_MAX_CONCURRENT = 2;
        }

        function loadScene(launchScene) {
            cc.director.loadScene(launchScene,
                function (err) {
                    if (!err) {
                        if (cc.sys.isBrowser) {
                            // show canvas
                            var canvas = document.getElementById('GameCanvas');
                            canvas.style.visibility = '';
                            var div = document.getElementById('GameDiv');
                            if (div) {
                                div.style.backgroundImage = '';
                            }
                        }
                        cc.loader.onProgress = null;
                        console.log('Success to load scene: ' + launchScene);
                    }
                    else if (CC_BUILD) {
                        setTimeout(function () {
                            loadScene(launchScene);
                        }, 1000);
                    }
                }
            );

        }

        var launchScene = settings.launchScene;

        // load scene
        loadScene(launchScene);

    };

    // jsList
    var jsList = settings.jsList;

    var bundledScript = settings.debug ? 'src/project.dev.js' : 'src/project.a9d13.js';
    if (jsList) {
        jsList = jsList.map(function (x) {
            return 'src/' + x;
        });
        jsList.push(bundledScript);
    }
    else {
        jsList = [bundledScript];
    }

    var option = {
        id: 'GameCanvas',
        scenes: settings.scenes,
        debugMode: settings.debug ? cc.debug.DebugMode.INFO : cc.debug.DebugMode.ERROR,
        showFPS: settings.debug,
        frameRate: 60,
        jsList: jsList,
        groupList: settings.groupList,
        collisionMatrix: settings.collisionMatrix,
    };

    // init assets
    cc.AssetLibrary.init({
        libraryPath: 'res/import',
        rawAssetsBase: 'res/raw-',
        rawAssets: settings.rawAssets,
        packedAssets: settings.packedAssets,
        md5AssetsMap: settings.md5AssetsMap,
        subpackages: settings.subpackages
    });

    cc.game.run(option, onStart);
};

if (window.jsb) {
    var isRuntime = (typeof loadRuntime === 'function');
    if (isRuntime) {
        require('src/settings.e226b.js');
        require('src/cocos2d-runtime.js');
        if (CC_PHYSICS_BUILTIN || CC_PHYSICS_CANNON) {
            require('src/physics.js');
        }
        require('jsb-adapter/engine/index.js');
    }
    else {
        require('src/settings.e226b.js');
        require('src/cocos2d-jsb.js');
        if (CC_PHYSICS_BUILTIN || CC_PHYSICS_CANNON) {
            require('src/physics.js');
        }
        require('jsb-adapter/jsb-engine.js');
    }

    cc.macro.CLEANUP_IMAGE_CACHE = true;
    window.boot();
}



window._CCSettings={platform:"web-mobile",groupList:["default"],collisionMatrix:[[true]],rawAssets:{assets:{},internal:{"1":["effects/builtin-2d-sprite.effect",0],"2":["materials/builtin-2d-sprite.mtl",1],"3":["materials/builtin-unlit.mtl",1],"4":["effects/builtin-unlit.effect",0],"5":["effects/builtin-2d-gray-sprite.effect",0],"6":["materials/builtin-2d-gray-sprite.mtl",1],"8":["effects/builtin-3d-trail.effect",0],"9":["materials/builtin-3d-trail.mtl",1],"10":["effects/builtin-clear-stencil.effect",0],"11":["materials/builtin-clear-stencil.mtl",1],"12":["effects/builtin-2d-spine.effect",0],"13":["materials/builtin-2d-spine.mtl",1],"14":["materials/builtin-2d-base.mtl",1]}},assetTypes:["cc.EffectAsset","cc.Material"],jsList:["assets/Script/jquery-1.7.2.min.75459.js"],launchScene:"db://assets/Scene/index.fire",scenes:[{url:"db://assets/Scene/index.fire",uuid:0},{url:"db://assets/Scene/game.fire",uuid:7}],packedAssets:{"061da6d65":[0,18,21,1,22,23,"441oXsFAZLzpkCuJjyKWhg",25,"5cO7kybDxGj4ipyMYdRYZB","5f5dyqtRNNxaFmVzYns6FZ",28,30,31,"82+CasGI1Kj4221yKFj50O","91y5s8MNBLWbxlxjuDWK5F","9bvaMerUlDyary99mJa6xp","b0s/cyYkBFSKeHYepYNX8Y","bfW07UP7JDC6A7tDDYqZH9","ca3HDx0kxNyIM5YaF/YWci",34,35,"e5qnW2QTlFSr6t47bq85Qw",2,"edYixuk3JBjanP/vCGtY6B"],"079499991":[3,4],"07ce7530a":[5,6],"097c65cb8":[15,16,17,19,20,24,26,27,29,32,33,36],"09ebca4bf":["01Vrm4+oRKKo5AOR45tZm8",7,"0cpKYTHlpBKLvKeUcjtD53","0elaq/X81HD54nPDxPf5kr","27+zd9YF5D7pv5ylQ6mj9s","50JzOFLOVCa4hxSFT1rztf","50TI8LC5BHAa2Zw5+a44at","6cJtH6kaVICYR2rP8xRh5q","85Je7zpzNIqpCzMnECkKof","87TyFoxDBDGY+7fLY8joi8","91JycbBmlI2LESxTVSdwfp","a1OyIZ+gtJ96VHvkQi4zZ6","a6tovzB8dHKofxtkLolFZG","ccp9LHy1pEfplyRQNpXq2f","deFBMm0ThMJJ5gIvjduKi7","e2v7aqT6pD3YbdNnncY8YM","edtro/xK9MUZN2nkdHE+8M"],"0a5cba09d":[8,9],"0d669730c":[10,11],"0e4bc3b03":[12,13]},md5AssetsMap:{import:["061da6d65","af942","079499991","02fab","07ce7530a","2b2c0","097c65cb8","51f88","09ebca4bf","15cb8","0a5cba09d","887a6","0d669730c","6f73c","0e4bc3b03","3226b",14,"17b20"],"raw-assets":[15,"cea68",16,"3d133",17,"ee403",18,"1322f",19,"157cd",20,"24a35",21,"be852",22,"0223c",23,"5ccd3",24,"86a14",25,"c6361",26,"0b9d2",27,"e0f3b",28,"6d707",29,"671ad",30,"86a14",31,"c49bf",32,"4ff6f",33,"4165d",34,"d55c2",35,"cdbc9",36,"83118"]},orientation:"",debug:false,subpackages:{},uuids:["03MCEVQO1CV5mI8l4KFl06","28dPjdQWxEQIG3VVl1Qm6T","ecpdLyjvZBwrvm+cedCcQy","2aKWBXJHxKHLvrBUi2yYZQ","6dkeWRTOBGXICfYQ7JUBnG","14TDKXr2NJ6LjvHPops74o","3ae7efMv1CLq2ilvUY/tQi","05BiMU6V1A+orR9WbFxFZj","2afAA24LNP4YmYiaVLiivs","46bU+b5fROqIXVPG6aZWWK","c0BAyVxX9JzZy8EjFrc9DU","cffgu4qBxEqa150o1DmRAy","0ek66qC1NOQLjgYmi04HvX","7a/QZLET9IDreTiBfRn2PD","6fgBCSDDdPMInvyNlggls2","02delMVqdBD70a/HSD99FK","03oJClwMlAeodOLLC184Gl","12OHErbRBLO6QhoioW0A59","1chtOBYrdBCLxQJ0usHK3J","21SJ5ZFb5OjZC84HlSIN2f","23z7qeighN96Rtzs7r13v6","267/IxNaRCo4JCIOEPuVzk","2cXA4kaoNNcqiqmXrSCb30","42GUovAiZCrrvQtcIcmj3p","44rZbw1wBLsrW60EohAo9S","4dqYHzjC9Ic5V/lwbPUIOS","4d+/LzFHtKBrnrddA1+AL9","61Aix/RthDMJg4+mrTwSfq","61cyPdEfRN047sDK9rO0W5","61qxoE1kZL4YWBYvU+Eq1o","618XqOJQNFAKBR64iXgSjo","69CHzKB2pFeJgcZWE0/TPR","a0Vi0VjPJOHbXW2OwMF9RF","ccmm8zURpN4rayVLjOsl5D","d608qFRoFHwbXd0Dap056i","d8HsitJHxOYqo801xBk8ev","e4gFhaxrJLDrfhp04sZqQV"]};(function(e){var t=e.uuids,s=e.md5AssetsMap;for(var i in s)for(var r=s[i],n=0;n<r.length;n+=2)"number"==typeof r[n]&&(r[n]=t[r[n]])})(window._CCSettings);

